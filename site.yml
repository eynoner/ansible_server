---

- hosts: all
  become: true
  tasks:
  #nginx-container
    - name: copy nginx files
      tags: docker,nginx
      copy: 
        src: nginx-container
        dest: /mnt/raid/
      register: nginx

    - name: Update nginx-container containers
      tags: docker,nginx
      community.docker.docker_compose_v2:
        project_src: /mnt/raid/nginx-container/
        pull: always
        state: present
        recreate: auto
    
    - name: Check nginx conf validity
      tags: docker,nginx
      community.docker.docker_container_exec:
        container: "nginx"
        command: "nginx -t"
      register: nginx_config_check
      failed_when: false
      changed_when: false

    - name: Assert that Nginx configuration is correct
      tags: docker,nginx
      assert:
        that:
          - nginx_config_check.rc == 0
        fail_msg: >-
          Nginx configuration test failed:
          {{ nginx_config_check.stderr }}

    - name: restart nginx container
      tags: docker,nginx
      community.docker.docker_compose_v2:
        project_src: /mnt/raid/nginx-container/
        state: restarted
      when: nginx.changed

#Sonarr    
    - name: Update sonnar containers
      tags: docker,sonar
      community.docker.docker_compose_v2:
        project_src: /mnt/raid/sonarr/
        pull: always
        state: present
        recreate: auto
#Jacket
    - name: Update jacket compose
      community.docker.docker_compose_v2:
        project_src: /mnt/raid/jackett/
        pull: always
        state: present
        recreate: auto
#Jellyfin
    - name: Update jellyfin compose
      community.docker.docker_compose_v2:
        project_src: /mnt/raid/jillyfin/
        pull: always
        state: present
        recreate: auto
#homeassistant
    - name: Update homeassistant compose
      community.docker.docker_compose_v2:
        project_src: /mnt/raid/homeassistant/
        pull: always
        state: present
        recreate: auto      
#torrent
    - name: Update torrent compose
      community.docker.docker_compose_v2:
        project_src: /mnt/raid/torrent/
        pull: always
        state: present
        recreate: auto
#monitoring(prometheus, grafana, cadvisor, node-exporter)
    - name: Update monitoring compose
      community.docker.docker_compose_v2:
        project_src: /mnt/raid/monitoring/
        pull: always
        state: present
        recreate: auto

    - name: Update immich containers
      tags: docker,immich
      community.docker.docker_compose_v2_pull:
        project_src: /mnt/raid/immich-app/
      register: immich_changed

    - name: rsync immich data
      tags: immich,docker
      synchronize:
        src: /mnt/raid/immich-app/
        dest: /media/yanec/Expansion/immich-app.backup/
        archive: true
        group: false
        owner: false
        mode: push
        rsync_opts:
          - "--exclude='**/thumbs/'"
          - "--exclude='**/encoded-video/'"
          - "--delete"
      delegate_to: "{{ inventory_hostname }}"
      when: immich_changed.changed

    - name: Restart immich compose
      community.docker.docker_compose_v2:
        project_src: /mnt/raid/immich-app/
        state: present
        recreate: auto
      when: immich_changed.changed


#nextcloud
    - name: Pull latest nextcloud image
      tags: build
      docker_image:
        name: nextcloud:latest
        source: pull
      register: nextcloud_pulled

    - name: Build Docker image manually
      become: yes
      tags: build
      command: docker build -t nextcloud-with-smbclient .
      args:
        chdir: /mnt/raid/nextcloud
      register: build_output
      when: nextcloud_pulled.changed

    - name: Restart nextcloud compose
      tags: build
      community.docker.docker_compose_v2:
        project_src: /mnt/raid/nextcloud/
        state: present
        recreate: auto
      when: nextcloud_pulled.changed    
    - name: rsync raid data to external drive
      tags: backup,docker
      synchronize:
        src: /mnt/raid/
        dest: /media/yanec/Expansion/cloud
        archive: true
        group: false
        owner: false
        copy_links: true
        mode: push
        rsync_opts:
          - "--exclude='immich-app'" 
          - "--exclude='storage'"
          - "--exclude='**/files_trashbin/'"
          - "--exclude='lost+found'"
          - "--exclude='**/app-discover-cache/'"
          - "--exclude='**/*ipc-socket*'"
          - "--exclude='**/*logs*'"
          - "--delete"
      delegate_to: "{{ inventory_hostname }}"
      when: nextcloud_pulled.changed        

    # - name: build nextcloud container
    #   tags: build
    #   community.docker.docker_image:
    #     name: nextcloud-with-smbclient-new
    #     build:
    #       path: /mnt/raid/nextcloud
    #       dockerfile: Dockerfile
    #     source: build

    # - name: Update nextcloud containers
    #   tags: docker,nextcloud
    #   community.docker.docker_compose_v2_pull:
    #     project_src: /mnt/raid/nextcloud/
    #   register: nextcloud_changed



    # - name: Restart nextcloud compose
    #   community.docker.docker_compose_v2:
    #     project_src: /mnt/raid/nextcloud/
    #     state: present
    #     recreate: auto
    #   when: nextcloud_changed.changed
  #sudo rsync -avh --progress --no-owner --no-group --delete --exclude='immich-app' --exclude='storage' --exclude="**/files_trashbin/" --exclude='lost+found' /mnt/raid/ /media/yanec/Expansion/cloud
    # - name: Update {{ service_name }} containers
    #   tags: docker,{{ service_name }}
    #   community.docker.docker_compose_v2_pull:
    #     project_src: /mnt/raid/{{ service_name }}/
    #   register: "{{ service_name }}_changed"

    # - name: Update {{ service_name }}
    #   community.docker.docker_compose_v2:
    #     project_src: /mnt/raid/{{ service_name }}
    #     state: present
    #     recreate: auto
    #   when: "{{ service_name }}_changed.changed"


# sudo rsync -avh --progress --no-owner --no-group --delete --exclude='**/thumbs/' --exclude='**/encoded-video/' /mnt/raid/immich-app/ /media/yanec/Expansion/immich-app.backup/